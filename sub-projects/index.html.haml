---
layout: rightcol
rightcol_partial: rightcol-documentation.html.haml
title: Sub Projects
---
%h1
  Sub Projects

%h2
  Business Activity Framework
%p
  The Business Activity Framework is a fully novel comprehensive solution for building transactional Web Services with accordance to the model defined in the WS-BusinessActivity specification. It provides a lightweight API that consists of a set of easy to learn and intuitive annotations and operations. It significantly facilitates development of transaction aware Web Services and releases programmers from mixing transaction related code with business logic of their applications.
Web Services must be simply annotated with a set of defined annotations and the framework transparently applies all necessary transactional mechanisms to enable participation in long-running Business Activity type extended transactions.
Business Activity framework has been built on top of the XTS (XML Transaction Service) component, which is a part of the JBoss Transaction Service. It uses JBoss AOP framework to transparently apply its mechanisms to Web Services.
%h3
  Features
%table.deftable
  %tbody
    %tr
      %td.termFirst
        Separation of Concerns
      %td.defFirst
        All necessary transaction-related mechanisms are applied by the framework in a fully transparent way. Programmers do not need to concern themselves with any low-level details and do not need to mix transaction related code with business logic of their applications.
    %tr
      %td.term
        Annotation-based API
      %td.def
        The core API of the Business Activity Framework consists of a set of annotations. Developers do not need to write any additional code. Most annotations have intuitive and reasonable default values to release the developer from the necessity of specifying all required annotation member values explicitly.
    %tr
      %td.term
        Flexible data management
      %td.def
        Framework's API enables developers to remember arbitrarily custom data, which may be potentially used for completion or compensation. The Data Manager component additionally provides operations to store and retrieve data within the application logic.
    %tr
      %td.term
        Flexible ex
      %td.def
        Completion and compensation actions can be executed both locally and remotely using different mechanisms. The framework can dynamically invoke methods on POJOs and EJBs. Support for remote Web Services will be added shortly. Custom mechanisms can be easily used without any code changes as well.
    %tr
      %td.term
        Portability
      %td.def
        Implementation specific parts of the Business Activity Framework have been well separated and it is possible to port the code to use any other AOP framework.

%h2
  Transactional File I/O
%p
  The Transactional File I/O library provides an XA resource manager for file system access, allowing file operations to participate fully in transactions with databases or messaging systems.
%h3
  Features
%table.deftable
  %tbody
    %tr
      %td.termFirst
        Easy to use API
      %td.defFirst
        Read or write the contents of a file using standard Java APIs (DataInput, DataOutput) with transactional behaviour, including transparent lock handling and crash recovery.
    %tr
      %td.term
        Enterprise integration
      %td.def
        File manipulations can participate in transactions with other XA resource managers, such as databases or messaging systems. e.g. Read business data entries from file and update a database, then delete or update the file, with guaranteed consistency. Multiple transactions (threads) can operate on the file concurrently for additional performance.
    %tr
      %td.term
        Multiple JVMs for scalability
      %td.def
        Multiple JVMs can perform transactions on the same file concurrently and a transaction can span multiple JVMs.
    %tr
      %td.term
        Directory Manipulations
      %td.def
        Create, delete, rename or copy files transactionally. Ideal for installers or batch processes.
